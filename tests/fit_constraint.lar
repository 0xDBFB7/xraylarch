doc =  """
   Example fit to Gaussian line shape.
"""

def resid(pars, data, verbose=False):
    off = pars.off.value
    amp1 = pars.amp1.value
    cen1 = pars.cen1.value
    wid1 = pars.wid1.value
    amp2 = pars.amp2.value
    cen2 = pars.cen2.value
    wid2 = pars.wid2.value
    model = (off +
             amp1*gaussian(data.x, cen1, wid1) +
             amp2*gaussian(data.x, cen2, wid2) )
    if verbose:
        print amp1, cen1, wid1, amp2, cen2, wid2, off
        newplot(data.x, data.y)
        plot(data.x, model, force_draw=True)
    endif
    return  model - data.y
enddef

mdat = group()
mdat.x = arange(201)/20.0
mdat.y = (-2.0 +
          6.0*gaussian(mdat.x, 3.0, 0.5) +
          2.0*gaussian(mdat.x, 4.9, 0.25) +
          random.normal(size=len(mdat.x), scale=0.22) )

params = group()
params.off  = guess(-1)
params.amp1 = guess(4, min=.0)
params.cen1 = guess(2.8)
params.wid1 = guess(1.2,  min=-0.5)
params.amp2 = param(expr='params.amp1.value/3')
params.cen2 = guess(4.7)
params.wid2 = param(expr='params.wid1.value/2')

model = mdat.y + resid(params, mdat)

minimize(resid, params, args=(mdat,), kws={'verbose': True})

status = resid(params, mdat, verbose=True)
print 'Fit finishd: %i function calls' % params.nfcn_calls
show(params)
# plot(mdat.x, model)
