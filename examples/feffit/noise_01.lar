p1 = read_feffdat('feff0001.dat')
p1.e0 = 2
p1.sigma2 = 0.013

k = 0.05 * arange(421)

for iscale in range(12):
    scale = 1.2e-5 *  2**iscale

    eps = []
    for  i in range(8):
        sum = ff2chi([p1], k=k)  + random.normal(size=len(k), scale=scale)

        fdat = group(k=k, chi=sum)

        trans = feffit_transform(kmin=4, kmax=16, kweight=1, dk=4,
                                 window='bessel', rmin=1.4, rmax=3.0)

        d1    = feffit_dataset(data=fdat, pathlist=[p1], transform=trans)

        d1.prepare_fit()
        eps.append(trans.epsilon_k)
    endfor

    trans.xafsft(fdat.chi, group=fdat, rmax_out=16)
    
    if iscale == 0:
        newplot(fdat.k, fdat.chi*fdat.k)
        plot(fdat.k, fdat.kwin*0.7)
        
        newplot(fdat.r, fdat.chir_mag, rmax=13, win=2)
        print ' I  InputNoise| Estimated Noise       =>  Ratio'
    else:
        update_line(fdat.k, fdat.chi*fdat.k, trace=1, win=1)
        update_line(fdat.r, fdat.chir_mag, trace=1, win=2)
    #endif
        
    eps = array(eps)
    print ' %2.2i  %.5f  | %.5f +/-  %.5f  => %.5f' % (iscale, scale, eps.mean(), eps.std(), eps.mean()/scale)
endfor
