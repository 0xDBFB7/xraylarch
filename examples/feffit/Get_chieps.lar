

cu = read_ascii('cu_metal_rt.xdi')
autobk(cu.energy, cu.mutrans, group=cu, rbkg=1.0, kw=1)

fitparams = group(amp  = guess(1),
                  de0  = guess(0.1),
                  ss2  = guess(0.002),
                  delr = guess(0.)  )

path1 = feffpath('feffcu01.dat',
                 s02    = 'amp',
                 e0     = 'de0',
                 sigma2 = 'ss2',
                 deltar = 'delr')
window= 'parzen'
trans   = feffit_transform(kmin=4, kmax=16, kweight=2, dk=3, dk2=3, window=window, rmin=1.4, rmax=3.0)
dataset = feffit_dataset(data=cu, pathlist=[path1], transform=trans)

xftf(cu.k, cu.chi, kmin=4, kmax=16, kweight=2, dk=3, dk2=3, window=window, group=cu, rmax_out=32.0)

eps_k =  dataset.estimate_noise()
print '--->  epsilon_k, r = ', eps_k, trans.epsilon_k, trans.epsilon_r
trans._estimate_noise(cu.chi)
print '-->  epsilon_k = ', trans.epsilon_k, trans.epsilon_r
print '====='
# newplot(dataset.data.r, dataset.data.chir_mag, xmin=9, ymin=-0.2, ymax=0.2)
# plot(dataset.data.r, dataset.data.chir_re)
# irmin = index_of(dataset.data.r, 15)
# irmax = index_of(dataset.data.r, 25) + 1
# highr  = realimag(dataset.data.chir[irmin:irmax])
# print ' === ', irmax, irmin, len(highr)
# rms_1  = sqrt((highr*highr).sum()/len(highr))
# print 'rms = ', rms_1, rms_1 / trans.epsilon_r

# print 'rms = ', (dataset.data.chir_re[irmin:irmax+1]**2).sum()/(irmax+1-irmin)
# plot(dataset.data.r, sqrt(dataset.data.chir_re**2))
